# --- LiteMaaS-SLA-Enforcer-Kueue Demo Setup ---
# This file configures the foundational resources for the MaaS Tiers demo,
# including namespaces for teams, priority classes for SLA enforcement,
# and the Kueue ClusterQueues that define the resource quotas and sharing policies.

# 1. TEAM NAMESPACES
# Represents the different customers or teams consuming the MaaS platform.
apiVersion: v1
kind: Namespace
metadata:
  name: team-a
  labels:
    pod-security.kubernetes.io/enforce: privileged
---
apiVersion: v1
kind: Namespace
metadata:
  name: team-b
  labels:
    pod-security.kubernetes.io/enforce: privileged

# 2. WORKLOAD PRIORITY CLASSES
# Establishes the priority hierarchy. Higher values preempt lower values.
---
apiVersion: kueue.x-k8s.io/v1beta1
kind: WorkloadPriorityClass
metadata:
  name: prod-priority
value: 1000 # High priority for Reserved/SLA workloads
description: "Production priority for guaranteed MaaS SLAs"
---
apiVersion: kueue.x-k8s.io/v1beta1
kind: WorkloadPriorityClass
metadata:
  name: dev-priority
value: 100 # Low priority for On-Demand/best-effort workloads
description: "Development priority for on-demand workloads"

# 3. RESOURCE FLAVORS
# Defines the types of hardware available in the cluster.
---
apiVersion: kueue.x-k8s.io/v1beta1
kind: ResourceFlavor
metadata:
  name: "default-flavor"
---
apiVersion: kueue.x-k8s.io/v1beta1
kind: ResourceFlavor
metadata:
  name: "gpu-flavor"
nodeTaints: # Ensures GPU workloads are scheduled on appropriately tainted nodes.
- key: nvidia.com/gpu
  effect: NoSchedule
  operator: Exists

# 4. CLUSTER QUEUES (CQs)
# The core of the multi-tenancy and SLA enforcement logic.
---
apiVersion: kueue.x-k8s.io/v1beta1
kind: ClusterQueue
metadata:
  name: "shared-cq"
spec:
  cohort: "team-ab" # This CQ provides lendable CPU/Memory to other CQs in the cohort.
  queueingStrategy: BestEffortFIFO
  resourceGroups:
  - coveredResources: ["cpu", "memory"]
    flavors:
    - name: "default-flavor"
      resources:
      - name: "cpu"
        nominalQuota: "4" # Total shared CPU capacity for the cohort
      - name: "memory"
        nominalQuota: "8Gi" # Total shared Memory capacity for the cohort
---
apiVersion: kueue.x-k8s.io/v1beta1
kind: ClusterQueue
metadata:
  name: "team-a-cq" # Reserved Tier for Team A
spec:
  cohort: "team-ab"
  queueingStrategy: BestEffortFIFO
  preemption:
    # This is the key setting that enables the demo's preemption scenario.
    reclaimWithinCohort: Any
  resourceGroups:
  # Defines quota for shared CPU/Memory resources
  - coveredResources: ["cpu", "memory"]
    flavors:
    - name: "default-flavor"
      resources:
      - name: "cpu"
        # Team A has no guaranteed CPU, it must borrow from the cohort.
        nominalQuota: "0"
      - name: "memory"
        nominalQuota: "0Gi"
  # Defines quota for specialized GPU resources
  - coveredResources: ["nvidia.com/gpu"]
    flavors:
    - name: "gpu-flavor"
      resources:
      - name: "nvidia.com/gpu"
        # Team A is GUARANTEED one GPU, fulfilling the "Reserved Tier" SLA.
        nominalQuota: "1"
---
apiVersion: kueue.x-k8s.io/v1beta1
kind: ClusterQueue
metadata:
  name: "team-b-cq" # On-Demand Tier for Team B
spec:
  cohort: "team-ab"
  queueingStrategy: BestEffortFIFO
  resourceGroups:
  # Defines quota for shared CPU/Memory resources
  - coveredResources: ["cpu", "memory"]
    flavors:
    - name: "default-flavor"
      resources:
      - name: "cpu"
        nominalQuota: "0" # No guaranteed CPU, must borrow from cohort.
      - name: "memory"
        nominalQuota: "0Gi"
  # Defines quota for specialized GPU resources
  - coveredResources: ["nvidia.com/gpu"]
    flavors:
    - name: "gpu-flavor"
      resources:
      - name: "nvidia.com/gpu"
        # Team B has NO guaranteed GPU, making it the "On-Demand Tier".
        nominalQuota: "0"

# 5. LOCAL QUEUES (LQs)
# Connects namespaces to the central ClusterQueues.
---
apiVersion: kueue.x-k8s.io/v1beta1
kind: LocalQueue
metadata:
  namespace: team-a
  name: lq-team-a
spec:
  clusterQueue: team-a-cq
---
apiVersion: kueue.x-k8s.io/v1beta1
kind: LocalQueue
metadata:
  namespace: team-b
  name: lq-team-b
spec:
  clusterQueue: team-b-cq

